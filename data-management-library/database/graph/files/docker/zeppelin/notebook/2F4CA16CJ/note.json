{
  "paragraphs": [
    {
      "text": "%pgx\n\n// Load the pre-loaded graph.\nG \u003d session.getGraph(\"Openflights\")",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:37:27.182",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "PgxGraph[name\u003dOpenflights,N\u003d6981,E\u003d66871,created\u003d1582439453010]"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387420_-46975544",
      "id": "20190828-122856_1668676000",
      "dateCreated": "2020-02-23 13:26:27.420",
      "dateStarted": "2020-02-23 13:36:26.819",
      "dateFinished": "2020-02-23 13:36:26.999",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Display the names of all nodes (\u003d airports).\n\nG.queryPgql(\" SELECT a.name MATCH (a) \")",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:36:32.311",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a.name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a.name\nFaya Largeau Airport\nSan Gabriel Valley Airport\nJoshua Mqabuko Nkomo International Airport\nCharles Prince Airport\nBuffalo Range Airport\nVictoria Falls International Airport\nFarah Airport\nRobert Gabriel Mugabe International Airport\nPasighat Airport\nKee Field\nKramatorsk Airport\nKariba International Airport\nMutoko Airport\nKautokeino Air Base\nLille/Marcq-en-Baroeul Airport\nMutare Airport\nKawass Airport\nMasvingo International Airport\nOttawa Macdonald-Cartier International Airport\nStinson Municipal Airport\nSallisaw Municipal Airport\nJasper County Airport-Bell Field\nEl Dorado Springs Memorial Airport\nMarfa Municipal Airport\nAlpine Casparis Municipal Airport\nZvishavane Airport\nBubaque Airport\nChichen Itza International Airport\nBunbury Airport\nCable Airport\nThornhill Air Base\nMount Sterling Montgomery County Airport\nElkhart Municipal Airport\nNappanee Municipal Airport\nJim Hamilton L.B. Owens Airport\nGrove Municipal Airport\nHwange National Park Airport\nMc Pherson Airport\nDonaldson Field Airport\nPerry Houston County Airport\nHartsville Regional Airport\nHorace Williams Airport\nSan Cristobal de las Casas Airport\nDunnville Airport\nBrunswick County Airport\nChesterfield County Airport\nChileka International Airport\nAtherton Airport\nBagdarin Airport\nScarlett Martinez International Airport\nHenderson Oxford Airport\nLeesburg International Airport\nSemyazino Airport\nWitberg Tswalu Airport\nKaronga Airport\nMana Pools Airport\nPouso Alegre Airport\nBrigadeiro Cabral Airport\nYeysk Airport\nBerdyansk Airport\nBlimbingsari Airport\nKasungu Airport\nErenhot Saiwusu International Airport\nShobdon Aerodrome\nChino Airport\nKamigoto Airport\nOjika Airport\nChofu Airport\nHateruma Airport\nMadison County Airport\nLilongwe International Airport\nLas Brujas Airport\nDigby (General Hospital) Heliport\nThun Airport\nMzuzu Airport\nLavrentiya Airport\nPaso Robles Municipal Airport\nN 104 Helipad\nMoshoeshoe I International Airport\nMejametalana Airbase\nPrince Albert Glass Field\nBeijing Daxing International Airport\nNdjili International Airport\nNdolo Airport\nMuanda Airport\nKitona Base Airport\nBandundu Airport\nKikwit Airport\nMbandaka Airport\nGbadolite Airport\nGemena Airport\nKymi Airport\nKotakoli Airport\nPeace River Airport\nLisala Airport\nBangoka International Airport\nMatari Airport\nBunia Airport\nButa Zega Airport\nBukavu Kavumu Airport"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387427_2058649400",
      "id": "20190828-124153_1946531171",
      "dateCreated": "2020-02-23 13:26:27.427",
      "dateStarted": "2020-02-23 13:36:32.375",
      "dateFinished": "2020-02-23 13:36:32.766",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Count number of all edges (\u003d flight routes).\n\nG.queryPgql(\" SELECT COUNT(f) MATCH ()-[f]-\u003e() \")",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:29.214",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 84.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "COUNT(f)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "COUNT(f)\n66871"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387427_-1977544070",
      "id": "20190828-124245_1734348090",
      "dateCreated": "2020-02-23 13:26:27.427",
      "dateStarted": "2020-02-23 13:27:29.279",
      "dateFinished": "2020-02-23 13:27:30.123",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Show top 10 airlines in the number of flight routes\n\nG.queryPgql(\"\"\"\n  SELECT f.airline, COUNT(f)\n  MATCH ()-[f]-\u003e()\n  GROUP BY f.airline\n  ORDER BY COUNT(f) DESC\n  LIMIT 10\n\"\"\")",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:30.182",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "f.airline": "string",
                      "COUNT(f)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "f.airline\tCOUNT(f)\nRyanair\t2484\nAmerican Airlines\t2352\nUnited Airlines\t2178\nDelta Air Lines\t1981\nUS Airways\t1960\nChina Southern Airlines\t1446\nChina Eastern Airlines\t1251\nAir China\t1244\nSouthwest Airlines\t1146\neasyJet\t1130"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387428_1668846666",
      "id": "20190828-124348_694279488",
      "dateCreated": "2020-02-23 13:26:27.428",
      "dateStarted": "2020-02-23 13:27:30.316",
      "dateFinished": "2020-02-23 13:27:32.797",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Show all cities where I can visit from Bangkok taking a Japan Airlines flight.\n\nG.queryPgql(\"\"\"\n  SELECT DISTINCT a2.city\n  MATCH (a1)-[f1]-\u003e(a2)\n  WHERE a1.city \u003d \u0027Bangkok\u0027\n    AND f1.airline \u003d \u0027Japan Airlines\u0027\n\"\"\")",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:32.849",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a2.city": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a2.city\nChiang Mai\nChiang Rai\nFukuoka\nOsaka\nPhuket\nTokyo"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387428_796693800",
      "id": "20190828-124450_1655441373",
      "dateCreated": "2020-02-23 13:26:27.428",
      "dateStarted": "2020-02-23 13:27:33.118",
      "dateFinished": "2020-02-23 13:27:33.510",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Show all cities where I can visit from Bangkok taking Japan Airlines flights two times.\n\nG.queryPgql(\"\"\"\n  SELECT DISTINCT a2.city\n  MATCH (a1)-[f1]-\u003e()-[f2]-\u003e(a2)\n  WHERE a1.city \u003d \u0027Bangkok\u0027\n    AND f1.airline \u003d \u0027Japan Airlines\u0027\n    AND f2.airline \u003d \u0027Japan Airlines\u0027\n    AND a2.city !\u003d \u0027Bangkok\u0027\n\"\"\")",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:33.519",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a2.city": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a2.city\nAgana\nAkita\nAmami\nAomori\nAsahikawa\nBabelthuap\nBeijing\nBoston\nBusan\nCairns\nCheju\nChicago\nCoolangatta\nDalian\nDallas-Fort Worth\nDelhi\nDoha\nDubai\nFrankfurt\nFukuoka\nGuangzhou\nHakodate\nHanamaki\nHanoi\nHelsinki\nHiroshima\nHo Chi Minh City\nHong Kong\nHonolulu\nIzumo\nJakarta\nKagoshima\nKanazawa\nKaohsiung\nKhabarovsk\nKitakyushu\nKochi\nKota Kinabalu\nKuala Lumpur\nKumamoto\nKushiro\nLondon\nLos Angeles\nManila\nMatsuyama\nMemanbetsu\nMisawa\nMiyazaki\nMoscow\nNagasaki\nNagoya\nNanjing\nNanki-shirahama\nNew York\nObihiro\nOita\nOkayama\nOkinawa\nOsaka\nPapeete\nParis\nQingdao\nSan Diego\nSan Francisco\nSapporo\nSendai\nSeoul\nShanghai\nShenyang\nSingapore\nSydney\nTaipei\nTakamatsu\nTokushima\nTokyo\nVancouver\nVladivostok\nYamagata\nYamaguchi\nYantai"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387429_1902068024",
      "id": "20190828-124650_1356257180",
      "dateCreated": "2020-02-23 13:26:27.429",
      "dateStarted": "2020-02-23 13:27:33.689",
      "dateFinished": "2020-02-23 13:27:34.092",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Show all cities where I can visit from Bangkok taking Japan Airlines flights 1 - 5 times.\n\nG.queryPgql(\"\"\"\n\n  PATH jal_flight AS ()-[f]-\u003e(a)\n  WHERE a.city!\u003d\u0027Bangkok\u0027\n    AND f.airline\u003d\u0027Japan Airlines\u0027\n\n  SELECT DISTINCT a2.city\n  MATCH (a1)-/:jal_flight{1,5}/-\u003e(a2)\n  WHERE a1.city\u003d\u0027Bangkok\u0027\n\n\"\"\")",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:34.206",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a2.city": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a2.city\nAgana\nAkita\nAmami\nAomori\nAsahikawa\nAtlanta\nBabelthuap\nBeijing\nBoston\nBrisbane\nBusan\nCairns\nCheju\nChiang Mai\nChiang Rai\nChicago\nCoolangatta\nDalian\nDallas-Fort Worth\nDelhi\nDoha\nDubai\nEdmonton\nFrankfurt\nFukuoka\nGuangzhou\nHakodate\nHanamaki\nHanoi\nHelsinki\nHiroshima\nHo Chi Minh City\nHong Kong\nHonolulu\nIzumo\nJakarta\nKagoshima\nKanazawa\nKaohsiung\nKhabarovsk\nKitakyushu\nKochi\nKota Kinabalu\nKuala Lumpur\nKumamoto\nKunming\nKushiro\nLima\nLondon\nLos Angeles\nLyon\nManila\nMatsuyama\nMemanbetsu\nMisawa\nMiyazaki\nMoscow\nNagasaki\nNagoya\nNanjing\nNanki-shirahama\nNew Orleans\nNew York\nNiigata\nObihiro\nOita\nOkayama\nOkinawa\nOsaka\nPapeete\nParis\nPhuket\nQingdao\nSan Diego\nSan Francisco\nSantiago\nSapporo\nSendai\nSeoul\nShanghai\nShenyang\nSingapore\nSydney\nTaipei\nTakamatsu\nTianjin\nTokushima\nTokyo\nToulouse\nVancouver\nVladivostok\nWuhan\nXi\u0027an\nYamagata\nYamaguchi\nYantai\nYellowknife"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387458_-941428491",
      "id": "20190828-124527_340522539",
      "dateCreated": "2020-02-23 13:26:27.458",
      "dateStarted": "2020-02-23 13:27:34.517",
      "dateFinished": "2020-02-23 13:27:37.088",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Show all airports (and cities) which have direct flights to Tokyo, Kuala Lumpur, and Hanoi.\n\nG.queryPgql(\"\"\"\n  SELECT DISTINCT x.name, x.city\n  MATCH (x)-\u003e(a), (x)-\u003e(b), (x)-\u003e(c)\n  WHERE a.city\u003d\u0027Tokyo\u0027\n    AND b.city\u003d\u0027Kuala Lumpur\u0027\n    AND c.city\u003d\u0027Hanoi\u0027\n\"\"\")",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:37.116",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "x.name": "string",
                      "x.city": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "x.name\tx.city\nBeijing Capital International Airport\tBeijing\nCharles de Gaulle International Airport\tParis\nChengdu Shuangliu International Airport\tChengdu\nChubu Centrair International Airport\tNagoya\nFrankfurt am Main Airport\tFrankfurt\nGimhae International Airport\tBusan\nGuangzhou Baiyun International Airport\tGuangzhou\nHong Kong International Airport\tHong Kong\nIncheon International Airport\tSeoul\nKansai International Airport\tOsaka\nMacau International Airport\tMacau\nNinoy Aquino International Airport\tManila\nShanghai Pudong International Airport\tShanghai\nSingapore Changi Airport\tSingapore\nSuvarnabhumi Airport\tBangkok\nTaiwan Taoyuan International Airport\tTaipei\nTan Son Nhat International Airport\tHo Chi Minh City\nYangon International Airport\tYangon"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387458_-1976622259",
      "id": "20190828-124751_1275893266",
      "dateCreated": "2020-02-23 13:26:27.458",
      "dateStarted": "2020-02-23 13:27:37.295",
      "dateFinished": "2020-02-23 13:27:39.385",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\nG \u003d G.undirect(\n      MultiEdges.REMOVE_MULTI_EDGES  // Multi edges between the same nodes\n    , SelfEdges.REMOVE_SELF_EDGES    // Edges between the same single node\n    , Mode.CREATE_COPY               // Copy this graph\n    , null                           // Graph name (optional)\n    )\n    ",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:39.449",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "PgxGraph[name\u003dsub-graph_54,N\u003d6981,E\u003d18857,created\u003d1582464460825]"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387459_-741496452",
      "id": "20190901-173242_127082929",
      "dateCreated": "2020-02-23 13:26:27.459",
      "dateStarted": "2020-02-23 13:27:39.612",
      "dateFinished": "2020-02-23 13:27:41.633",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Firstly, calculate degree centrality of all nodes.\n\nanalyst.inDegreeCentrality(G)",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:41.669",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "VertexProperty[name\u003din_degree,type\u003dinteger,graph\u003dsub-graph_54]"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387459_2036967598",
      "id": "20190828-125036_1167904777",
      "dateCreated": "2020-02-23 13:26:27.459",
      "dateStarted": "2020-02-23 13:27:41.993",
      "dateFinished": "2020-02-23 13:27:42.472",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Run PGQL query to check the score.\n\nG.queryPgql(\"\"\"\n  SELECT n.name, n.in_degree MATCH (n)\n  ORDER BY n.in_degree DESC LIMIT 5\n\"\"\").print()",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:42.505",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 194.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "n.name": "string",
                      "n.in_degree": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "n.name\tn.in_degree\nAmsterdam Airport Schiphol\t248\nFrankfurt am Main Airport\t244\nCharles de Gaulle International Airport\t240\nAtaturk International Airport\t233\nHartsfield Jackson Atlanta International Airport\t217"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387460_-1430183146",
      "id": "20190828-125104_916204834",
      "dateCreated": "2020-02-23 13:26:27.460",
      "dateStarted": "2020-02-23 13:27:42.632",
      "dateFinished": "2020-02-23 13:27:43.235",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Next, calculate pagerank on the same graph.\n\nanalyst.pagerank(G)",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:43.251",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "VertexProperty[name\u003dpagerank,type\u003ddouble,graph\u003dsub-graph_54]"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387461_-1304378891",
      "id": "20190828-125130_935735081",
      "dateCreated": "2020-02-23 13:26:27.461",
      "dateStarted": "2020-02-23 13:27:43.396",
      "dateFinished": "2020-02-23 13:27:44.718",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Run PGQL query to check the score.\n\nG.queryPgql(\"\"\"\n  SELECT n.name, n.pagerank WHERE (n)\n  ORDER BY n.pagerank DESC LIMIT 5\n\"\"\")",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:44.734",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 194.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "n.name": "string",
                      "n.pagerank": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "n.name\tn.pagerank\nHartsfield Jackson Atlanta International Airport\t0.002220084444053988\nChicago O\u0027Hare International Airport\t0.0020681970542254817\nAtaturk International Airport\t0.002054688020154821\nDallas Fort Worth International Airport\t0.0020385557861645736\nDenver International Airport\t0.002019176228378429"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387461_471489485",
      "id": "20190828-125222_590300836",
      "dateCreated": "2020-02-23 13:26:27.461",
      "dateStarted": "2020-02-23 13:27:45.046",
      "dateFinished": "2020-02-23 13:27:45.637",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Finally, we will calculate betweeness centrality scores.\n\nanalyst.vertexBetweennessCentrality(G)",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:27:45.659",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "VertexProperty[name\u003dbetweenness,type\u003ddouble,graph\u003dsub-graph_54]"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387461_332695828",
      "id": "20190828-125249_144182653",
      "dateCreated": "2020-02-23 13:26:27.462",
      "dateStarted": "2020-02-23 13:27:46.032",
      "dateFinished": "2020-02-23 13:28:05.873",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Run PGQL query to check the score.\n\nG.queryPgql(\"\"\"\n  SELECT n.name, n.betweenness WHERE (n)\n  ORDER BY n.betweenness DESC LIMIT 5\n\"\"\").print()\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:28:05.878",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 194.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "n.name": "string",
                      "n.betweenness": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "n.name\tn.betweenness\nCharles de Gaulle International Airport\t655172.3335854782\nLos Angeles International Airport\t623868.2599184898\nTed Stevens Anchorage International Airport\t602786.6702364311\nDubai International Airport\t571302.8493447279\nFrankfurt am Main Airport\t540430.459083301"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387462_-1859697624",
      "id": "20190828-125757_1347869626",
      "dateCreated": "2020-02-23 13:26:27.462",
      "dateStarted": "2020-02-23 13:28:05.995",
      "dateFinished": "2020-02-23 13:28:06.755",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\nG.queryPgql(\"\"\"\n  SELECT n.name, n.in_degree, n.pagerank, n.betweenness\n  MATCH (n)\n  WHERE n.iata \u003d \u0027SIN\u0027\n     OR n.iata \u003d \u0027NRT\u0027 // NRT\n\"\"\").print()\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:28:06.778",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 142.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "n.name": "string",
                      "n.in_degree": "string",
                      "n.pagerank": "string",
                      "n.betweenness": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "n.name\tn.in_degree\tn.pagerank\tn.betweenness\nNarita International Airport\t104\t0.0010125382365125364\t364360.4755323206\nSingapore Changi Airport\t124\t0.0013384477030059798\t316973.80405696004"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387462_-1145891577",
      "id": "20190903-094535_1472844175",
      "dateCreated": "2020-02-23 13:26:27.462",
      "dateStarted": "2020-02-23 13:28:06.912",
      "dateFinished": "2020-02-23 13:28:07.571",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pgx\n\n// Which airport (and city) has direct flights to Tokyo, KL, and Hanoi, but also has low pagerank scores?\n\nG.queryPgql(\"\"\"\n SELECT DISTINCT x.name, x.city, x.pagerank\n MATCH (x)-(a), (x)-(b), (x)-(c)\n WHERE a.city\u003d\u0027Tokyo\u0027\n   AND b.city\u003d\u0027Kuala Lumpur\u0027\n   AND c.city\u003d\u0027Hanoi\u0027\n ORDER BY x.pagerank ASC\n\"\"\").print()",
      "user": "anonymous",
      "dateUpdated": "2020-02-23 13:28:07.639",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "x.name": "string",
                      "x.city": "string",
                      "x.pagerank": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "x.name\tx.city\tx.pagerank\nMacau International Airport\tMacau\t3.362767554363343E-4\nGimhae International Airport\tBusan\t3.372923956946991E-4\nYangon International Airport\tYangon\t4.321958960234097E-4\nChubu Centrair International Airport\tNagoya\t4.4493823627408756E-4\nKansai International Airport\tOsaka\t5.424781112094327E-4\nTan Son Nhat International Airport\tHo Chi Minh City\t6.398169577845747E-4\nTaiwan Taoyuan International Airport\tTaipei\t9.194751246234206E-4\nChengdu Shuangliu International Airport\tChengdu\t9.671962481338515E-4\nNinoy Aquino International Airport\tManila\t0.0012083936939856978\nSuvarnabhumi Airport\tBangkok\t0.0012266335852384343\nIncheon International Airport\tSeoul\t0.0012454831641082232\nHong Kong International Airport\tHong Kong\t0.001258647111057473\nGuangzhou Baiyun International Airport\tGuangzhou\t0.001309894196290796\nSingapore Changi Airport\tSingapore\t0.0013384477030059798\nShanghai Pudong International Airport\tShanghai\t0.0013661228301700796\nBeijing Capital International Airport\tBeijing\t0.0018026239982580545\nFrankfurt am Main Airport\tFrankfurt\t0.0018525560518987494\nCharles de Gaulle International Airport\tParis\t0.0019112459001104337"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1582464387462_-362560545",
      "id": "20190828-125822_646784715",
      "dateCreated": "2020-02-23 13:26:27.462",
      "dateStarted": "2020-02-23 13:28:07.944",
      "dateFinished": "2020-02-23 13:28:09.021",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Flight Network",
  "id": "2F4CA16CJ",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "pgx:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}